{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAkE;AACrB;AACc;AACiB;AACJ;AAExE,MAAMS,MAAM,GAAG,QAAsD;EAAA,IAApD;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAU,CAAC;EAE7D,IAAIH,QAAQ,KAAK,QAAQ,EAAE;IACzB,OAAO,IAAI;EACb;EAEA,IAAII,QAAQ,GAAG,IAAI;EACnB,IAAID,SAAS,EAAE;IACbC,QAAQ,GAAGD,SAAS,CAACE,UAAU;EACjC;EAEA,OACE,kEAAC,4EAA0B;IAAC,KAAK,EAAC,cAAc;IAAC,WAAW,EAAC;EAAM,GACjE,kEAAC,8DAAW;IACR,KAAK,EAAC,gBAAgB;IACtB,KAAK,EAAGJ,QAAQ,CAACK,kBAAmB;IACpC,QAAQ,EAAKC,KAAK,IAAML,WAAW,CAAE;MAAEI,kBAAkB,EAAEC;IAAM,CAAC,CAAI;IACtE,IAAI,EAAC;EAAiB,EACxB,EACF,kEAAC,8DAAW;IACR,KAAK,EAAC,aAAa;IACnB,KAAK,EAAGN,QAAQ,CAACO,eAAgB;IACjC,QAAQ,EAAKD,KAAK,IAAML,WAAW,CAAE;MAAEM,eAAe,EAAED;IAAM,CAAC,CAAI;IACnE,IAAI,EAAC;EAAM,EACb,EAEF,kEAAC,qEAAgB,QACf,kEAAC,gEAAW;IACV,QAAQ,EAAKE,KAAK,IAAM;MACpBP,WAAW,CAAE;QAAEQ,cAAc,EAAED,KAAK,CAACE,EAAE,CAACC,QAAQ;MAAG,CAAC,CAAE;MACtDR,QAAQ,GAAGK,KAAK,CAACI,GAAG;IACtB,CACD;IACD,YAAY,EAAG,OAAS;IACxB,KAAK,EAAGZ,QAAQ,CAACS,cAAgB;IACjC,MAAM,EAAG;MAAA,IAAE;QAAEI;MAAK,CAAC;MAAA,OACjB,+EACIV,QAAQ,GACR,+EACE,0FAAiB,EACjB;QAAO,GAAG,EAAEA,QAAS;QAAC,QAAQ;QAAC,OAAO,EAAC;MAAU,UAAa,EAC9D,kEAAC,yDAAM;QAAC,WAAW;QAAC,OAAO,EAAGU;MAAM,iBAAqB,CACrD,GAEN,+EACE,2GAAkC,EAClC,kEAAC,yDAAM;QAAC,SAAS;QAAC,OAAO,EAAGA;MAAM,gBAAoB,CAClD,CAEJ;IAAA;EACN,EACF,CACe,CACQ;AAEjC,CAAC;AAED,+DAAevB,2DAAO,CAAE,CACtBC,2DAAU,CAAIuB,MAAM,IAAM;EACxB,MAAMC,IAAI,GAAGD,MAAM,CAAE,aAAa,CAAE,CAACE,sBAAsB,CAAE,MAAM,CAAE;EACrE,MAAMC,MAAM,GAAGF,IAAI,CAACN,cAAc;EAElC,OAAO;IACLT,QAAQ,EAAEe,IAAI;IACdhB,QAAQ,EAAEe,MAAM,CAAE,aAAa,CAAE,CAACI,kBAAkB,EAAE;IACtDhB,SAAS,EAAEY,MAAM,CAAC,MAAM,CAAC,CAACK,QAAQ,CAACF,MAAM;EAC3C,CAAC;AACH,CAAC,CAAE,EACHzB,6DAAY,CAAI4B,QAAQ,IAAM;EAC5B,OAAO;IACLnB,WAAW,CAAEoB,OAAO,EAAG;MACrBD,QAAQ,CAAE,aAAa,CAAE,CAACE,QAAQ,CAAE;QAAEP,IAAI,EAAEM;MAAQ,CAAC,CAAE;IACzD;EACF,CAAC;AACH,CAAC,CAAE,CACJ,CAAE,CAACvB,MAAM,CAAC;;;;;;;;;;ACjFX;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNoD;AAEZ;AAExCyB,kEAAc,CAAE,mBAAmB,EAAE;EACnCC,IAAI,EAAE,IAAI;EACVC,MAAM,GAAG;IACP,OAAQ,kEAAC,yDAAM,OAAG;EACpB;AACF,CAAC,CAAE,C","sources":["webpack://globe_plugin/./src/js/sermon_fields.js","webpack://globe_plugin/external window [\"wp\",\"blockEditor\"]","webpack://globe_plugin/external window [\"wp\",\"components\"]","webpack://globe_plugin/external window [\"wp\",\"compose\"]","webpack://globe_plugin/external window [\"wp\",\"data\"]","webpack://globe_plugin/external window [\"wp\",\"editPost\"]","webpack://globe_plugin/external window [\"wp\",\"element\"]","webpack://globe_plugin/external window [\"wp\",\"plugins\"]","webpack://globe_plugin/webpack/bootstrap","webpack://globe_plugin/webpack/runtime/compat get default export","webpack://globe_plugin/webpack/runtime/define property getters","webpack://globe_plugin/webpack/runtime/hasOwnProperty shorthand","webpack://globe_plugin/webpack/runtime/make namespace object","webpack://globe_plugin/./src/index.js"],"sourcesContent":["import { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { TextControl, FormFileUpload, Button } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\n\nconst Fields = ( { postType, postMeta, setPostMeta, sermonUrl } ) => {\n\n  if (postType !== 'sermon') {\n    return null;\n  }\n\n  let audioUrl = null;\n  if (sermonUrl) {\n    audioUrl = sermonUrl.source_url;\n  }\n\n  return (\n    <PluginDocumentSettingPanel title='Sermon files' initialOpen=\"true\">\n      <TextControl\n          label='Sermon Passage'\n          value={ postMeta.glb_sermon_passage}\n          onChange={ ( value ) => setPostMeta( { glb_sermon_passage: value } ) }\n          help=\"eg: John 3:1â€“19\"\n      />\n      <TextControl\n          label='Sermon Date'\n          value={ postMeta.glb_sermon_date}\n          onChange={ ( value ) => setPostMeta( { glb_sermon_date: value } ) }\n          type='date'\n      />\n\n      <MediaUploadCheck>\n        <MediaUpload\n          onSelect={ ( media ) => {\n              setPostMeta( { glb_sermon_mp3: media.id.toString() } )\n              audioUrl = media.url;\n            }\n          }\n          allowedTypes={ 'audio' }\n          value={ postMeta.glb_sermon_mp3 }\n          render={ ( { open } ) => (\n            <div>\n              { audioUrl ?\n                <div>\n                  <p>Sermon Mp3</p>\n                  <audio src={audioUrl} controls preload=\"metadata\">Test</audio>\n                  <Button isSecondary onClick={ open }>Replace mp3</Button>\n                </div>\n                :\n                <div>\n                  <p>Select the sermon to upload</p>\n                  <Button isPrimary onClick={ open }>Select mp3</Button>\n                </div>\n              }\n            </div>\n          )}\n        />\n      </MediaUploadCheck>\n    </PluginDocumentSettingPanel>\n  );\n}\n\nexport default compose( [\n  withSelect( ( select ) => {\n    const meta = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n    const sermon = meta.glb_sermon_mp3;\n\n    return {\n      postMeta: meta,\n      postType: select( 'core/editor' ).getCurrentPostType(),\n      sermonUrl: select('core').getMedia(sermon),\n    };\n  } ),\n  withDispatch( ( dispatch ) => {\n    return {\n      setPostMeta( newMeta ) {\n        dispatch( 'core/editor' ).editPost( { meta: newMeta } );\n      }\n    };\n  } )\n] )(Fields);\n\n\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from '@wordpress/plugins';\n\nimport Fields from './js/sermon_fields';\n\nregisterPlugin( 'glb-sermon-fields', {\n  icon: null,\n  render() {\n    return( <Fields /> );\n  }\n} );\n"],"names":["PluginDocumentSettingPanel","compose","withSelect","withDispatch","TextControl","FormFileUpload","Button","MediaUpload","MediaUploadCheck","Fields","postType","postMeta","setPostMeta","sermonUrl","audioUrl","source_url","glb_sermon_passage","value","glb_sermon_date","media","glb_sermon_mp3","id","toString","url","open","select","meta","getEditedPostAttribute","sermon","getCurrentPostType","getMedia","dispatch","newMeta","editPost","registerPlugin","icon","render"],"sourceRoot":""}